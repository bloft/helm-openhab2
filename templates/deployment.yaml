apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openhab2.fullname" . }}
  labels:
    {{- include "openhab2.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      {{- include "openhab2.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        {{- include "openhab2.selectorLabels" . | nindent 8 }}
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "openhab2.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
{{- if .Values.sidecar.service.enabled }}
      - name: {{ .Chart.Name }}-service
        image: "{{ .Values.sidecar.image }}"
        imagePullPolicy: {{ .Values.sidecar.imagePullPolicy }}
        env:
          - name: METHOD
            value: LIST
          - name: LABEL
            value: "{{ .Values.sidecar.service.label }}"
          - name: FOLDER
            value: "/openhab/conf/services"
          - name: RESOURCE
            value: "both"
          - name: NAMESPACE
            value: "ALL"
        volumeMounts:
          - name: storage
            mountPath: "/openhab/conf"
            {{- if .Values.persistence.subPath }}
            subPath: {{ .Values.persistence.subPath }}/conf
            {{- else }}
            subPath: conf
            {{- end}}
{{- end}}
{{- if .Values.sidecar.persistence.enabled }}
      - name: {{ .Chart.Name }}-persistence
        image: "{{ .Values.sidecar.image }}"
        imagePullPolicy: {{ .Values.sidecar.imagePullPolicy }}
        env:
          - name: METHOD
            value: LIST
          - name: LABEL
            value: "{{ .Values.sidecar.persistence.label }}"
          - name: FOLDER
            value: "/openhab/conf/persistence"
          - name: RESOURCE
            value: "both"
          - name: NAMESPACE
            value: "ALL"
        volumeMounts:
          - name: storage
            mountPath: "/openhab/conf"
            {{- if .Values.persistence.subPath }}
            subPath: {{ .Values.persistence.subPath }}/conf
            {{- else }}
            subPath: conf
            {{- end}}
{{- end}}
      - name: {{ .Chart.Name }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 12 }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          - name: OPENHAB_HTTP_PORT
            value: "{{ .Values.service.port }}"
          {{- toYaml .Values.env | nindent 10 }}
        ports:
          - name: http
            containerPort: {{ .Values.service.port }}
            protocol: TCP
        livenessProbe:
          initialDelaySeconds: 600
          periodSeconds: 10
          httpGet:
            path: /
            port: http
        readinessProbe:
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 1000
          httpGet:
            path: /
            port: http

        volumeMounts:
          - mountPath: /etc/localtime
            name: localtime
            readOnly: true
          - mountPath: /etc/timezone
            name: timezone
            readOnly: true
          - mountPath: /openhab/conf
            name: storage
{{- if .Values.persistence.subPath }}
            subPath: {{ .Values.persistence.subPath }}/conf
{{- else }}
            subPath: conf
{{- end }}
          - mountPath: /openhab/userdata
            name: storage
{{- if .Values.persistence.subPath }}
            subPath: {{ .Values.persistence.subPath }}/userdata
{{- else }}
            subPath: userdata
{{- end }}
          - mountPath: /openhab/addons
            name: storage
{{- if .Values.persistence.subPath }}
            subPath: {{ .Values.persistence.subPath }}/addons
{{- else }}
            subPath: addons
{{- end }}
          - mountPath: /openhab/.java
            name: storage
{{- if .Values.persistence.subPath }}
            subPath: {{ .Values.persistence.subPath }}/.java
{{- else }}
            subPath: .java
{{- end }}
          {{- range .Values.volume.other }}
          - mountPath: {{ .mountPath }}
            name: {{ .name }}
          {{- end }}
{{- if .Values.webdav.enabled }}
      - name: {{ .Chart.Name }}-webdav
        image: lead4good/webdav
        command: [/bin/bash, -c, "groupmod -g 9001 www-data && usermod -u 9001 -g 9001 www-data && sed -i s/80/{{ .Values.webdav.port }}/g /etc/nginx/sites-enabled/webdav-site.conf && /set_htpasswd.sh && nginx -g \"daemon off;\""]
        env:
          - name: WEBDAV_USERNAME
            value: "{{ .Values.webdav.user }}"
          - name: WEBDAV_PASSWORD
            value: "{{ .Values.webdav.pass }}"
        ports:
          - name: webdav
            containerPort: {{ .Values.webdav.port }}
            protocol: TCP
        volumeMounts:
          - mountPath: /var/www/webdav/conf
            name: storage
            {{- if .Values.persistence.subPath }}
            subPath: {{ .Values.persistence.subPath }}/conf
            {{- else }}
            subPath: conf
          {{- end }}
          - mountPath: /var/www/webdav/userdata
            name: storage
            {{- if .Values.persistence.subPath }}
            subPath: {{ .Values.persistence.subPath }}/userdata
            {{- else }}
            subPath: userdata
          {{- end }}
          - mountPath: /var/www/webdav/addons
            name: storage
            {{- if .Values.persistence.subPath }}
            subPath: {{ .Values.persistence.subPath }}/addons
            {{- else }}
            subPath: addons
          {{- end }}
          - mountPath: /var/www/webdav/.java
            name: storage
            {{- if .Values.persistence.subPath }}
            subPath: {{ .Values.persistence.subPath }}/.java
            {{- else }}
            subPath: .java
        {{- end }}
{{- end }}
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
        - name: storage
{{- if and .Values.persistence.enabled (eq .Values.persistence.type "pvc") }}
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim | default (include "openhab2.fullname" .) }}
{{- else if and .Values.persistence.enabled (eq .Values.persistence.type "hostPath") }}
          hostPath:
            path: {{ .Values.persistence.hostPath }}
            type: DirectoryOrCreate
{{- else }}
          emptyDir: {}
{{- end }}
        - name: localtime
          hostPath:
            path: /etc/localtime
        - name: timezone
          hostPath:
            path: /etc/timezone
        {{- range .Values.volume.other }}
        - name: {{ .name }}
          {{- toYaml .mount | nindent 10 }}
        {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
